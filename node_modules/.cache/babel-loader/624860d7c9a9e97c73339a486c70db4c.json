{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-projects\\\\task\\\\task-manager\\\\src\\\\components\\\\Profile.jsx\";\nimport React from 'react';\nimport DateNow from './DateNow';\nimport FormReg from './FormReg';\nimport Modal from './UI/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  let {\n    year,\n    month,\n    day,\n    isLogin,\n    name,\n    secondName,\n    modalReg,\n    setModalReg,\n    modalLogin,\n    setModalLogin\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: isLogin === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DateNow, {\n        year: year,\n        month: month,\n        day: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"nowday-title\",\n        children: [\"Hello \", name, \" \", secondName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-profile-log btn-profile-log_login\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalReg(true),\n        className: \"btn btn-profile-log\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: modalReg,\n        setVisible: setModalReg,\n        children: /*#__PURE__*/_jsxDEV(FormReg, {\n          legend: 'Регистрация',\n          btnReg: 'Зарегистрироваться'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","DateNow","FormReg","Modal","Profile","year","month","day","isLogin","name","secondName","modalReg","setModalReg","modalLogin","setModalLogin"],"sources":["E:/react-projects/task/task-manager/src/components/Profile.jsx"],"sourcesContent":["import React from 'react'\r\nimport DateNow from './DateNow'\r\nimport FormReg from './FormReg'\r\nimport Modal from './UI/Modal/Modal'\r\n\r\nconst Profile = ({ year, month, day, isLogin, name, secondName, modalReg, setModalReg, modalLogin, setModalLogin }) => {\r\n  return (\r\n    <div className='profile'>\r\n      {\r\n        isLogin === true\r\n        ? <>\r\n            <DateNow year={year} month={month} day={day}/>\r\n            <h1 className='nowday-title'>Hello {name} {secondName}</h1>\r\n          </>\r\n        : <div className='btn-group'>\r\n            <button className='btn btn-profile-log btn-profile-log_login'>Войти</button>\r\n            <button onClick={() => setModalReg(true)} className='btn btn-profile-log'>Регистрация</button>\r\n\r\n            <Modal visible={modalReg} setVisible={setModalReg}>\r\n              <FormReg legend={'Регистрация'} btnReg={'Зарегистрироваться'}/>\r\n            </Modal>\r\n\r\n            {/* <Modal visible={modal} setVisible={setModal}>\r\n              <FormReg legend={'Войти'} btnReg={'Войти'}/>\r\n            </Modal> */}\r\n          </div>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;;;AAEA,MAAMC,OAAO,GAAG,QAAuG;EAAA,IAAtG;IAAEC,IAAF;IAAQC,KAAR;IAAeC,GAAf;IAAoBC,OAApB;IAA6BC,IAA7B;IAAmCC,UAAnC;IAA+CC,QAA/C;IAAyDC,WAAzD;IAAsEC,UAAtE;IAAkFC;EAAlF,CAAsG;EACrH,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,UAEIN,OAAO,KAAK,IAAZ,gBACE;MAAA,wBACE,QAAC,OAAD;QAAS,IAAI,EAAEH,IAAf;QAAqB,KAAK,EAAEC,KAA5B;QAAmC,GAAG,EAAEC;MAAxC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAI,SAAS,EAAC,cAAd;QAAA,qBAAoCE,IAApC,OAA2CC,UAA3C;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADF,gBAKE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAQ,SAAS,EAAC,2CAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAE,MAAME,WAAW,CAAC,IAAD,CAAlC;QAA0C,SAAS,EAAC,qBAApD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE,QAAC,KAAD;QAAO,OAAO,EAAED,QAAhB;QAA0B,UAAU,EAAEC,WAAtC;QAAA,uBACE,QAAC,OAAD;UAAS,MAAM,EAAE,aAAjB;UAAgC,MAAM,EAAE;QAAxC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EAPN;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAzBD;;KAAMR,O;AA2BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}