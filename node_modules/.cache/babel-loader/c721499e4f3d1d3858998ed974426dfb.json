{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-projects\\\\task\\\\task-manager\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Info from './components/API/Info';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { getYear, getNowMonth, getNowDay } from './utils/date';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [modalReg, setModalReg] = useState(false);\n  const [modalLogin, setModalLogin] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [nowDayTask, setNowDayTask] = useState();\n  const [taskArray, setTaskArray] = useState();\n  const [isComplete, setIsComplete] = useState(false);\n  let year = getYear();\n  let month = getNowMonth();\n  let day = getNowDay();\n\n  async function fetchInfo() {\n    const response = await Info.getAll();\n    console.log(response);\n\n    if (response.data.userId !== 0) {\n      setIsLogin(true);\n    }\n\n    setNowDayTask(response.data.date);\n    setTaskArray(response.data.textDtos);\n  }\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n  let dayArray = [];\n\n  for (let index = 1; index < 32; index++) {\n    dayArray.push(index);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      isComplete: isComplete,\n      setIsComplete: setIsComplete,\n      nowDayTask: nowDayTask,\n      taskArray: taskArray,\n      isLogin: isLogin,\n      modalReg: modalReg,\n      setModalReg: setModalReg,\n      year: year,\n      month: month,\n      day: day,\n      dayArray: dayArray,\n      modalLogin: modalLogin,\n      setModalLogin: setModalLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKtWdjrdPW2JHG7+/8t7Y1T6cKQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Info","Header","Main","getYear","getNowMonth","getNowDay","App","modalReg","setModalReg","modalLogin","setModalLogin","isLogin","setIsLogin","nowDayTask","setNowDayTask","taskArray","setTaskArray","isComplete","setIsComplete","year","month","day","fetchInfo","response","getAll","console","log","data","userId","date","textDtos","dayArray","index","push"],"sources":["E:/react-projects/task/task-manager/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Info from './components/API/Info';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport {getYear, getNowMonth, getNowDay} from './utils/date';\n\nfunction App() {\n  const [modalReg, setModalReg] = useState(false);\n  const [modalLogin, setModalLogin] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [nowDayTask, setNowDayTask] = useState();\n  const [taskArray, setTaskArray] = useState();\n  const [isComplete, setIsComplete] = useState(false);\n\n  let year = getYear();\n  let month = getNowMonth();\n  let day = getNowDay();\n\n  async function fetchInfo() {\n    const response = await Info.getAll();\n    console.log(response)\n\n    if (response.data.userId !== 0) {\n      setIsLogin(true)\n      \n    }\n\n    setNowDayTask(response.data.date)\n    setTaskArray(response.data.textDtos)\n    \n  }\n\n  useEffect(() => {\n    fetchInfo()\n  }, [])\n\n  let dayArray = [];\n  for (let index = 1; index < 32; index++) {\n      dayArray.push(index)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Main isComplete={isComplete} setIsComplete={setIsComplete} nowDayTask={nowDayTask} taskArray={taskArray} isLogin={isLogin} \n            modalReg={modalReg} setModalReg={setModalReg} \n            year={year} month={month} day={day} dayArray={dayArray} \n            modalLogin={modalLogin} setModalLogin={setModalLogin}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA8C,cAA9C;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,EAA5C;EACA,MAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,EAA1C;EACA,MAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;EAEA,IAAIoB,IAAI,GAAGhB,OAAO,EAAlB;EACA,IAAIiB,KAAK,GAAGhB,WAAW,EAAvB;EACA,IAAIiB,GAAG,GAAGhB,SAAS,EAAnB;;EAEA,eAAeiB,SAAf,GAA2B;IACzB,MAAMC,QAAQ,GAAG,MAAMvB,IAAI,CAACwB,MAAL,EAAvB;IACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;;IAEA,IAAIA,QAAQ,CAACI,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;MAC9BhB,UAAU,CAAC,IAAD,CAAV;IAED;;IAEDE,aAAa,CAACS,QAAQ,CAACI,IAAT,CAAcE,IAAf,CAAb;IACAb,YAAY,CAACO,QAAQ,CAACI,IAAT,CAAcG,QAAf,CAAZ;EAED;;EAEDhC,SAAS,CAAC,MAAM;IACdwB,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT;EAIA,IAAIS,QAAQ,GAAG,EAAf;;EACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;IACrCD,QAAQ,CAACE,IAAT,CAAcD,KAAd;EACH;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,IAAD;MAAM,UAAU,EAAEf,UAAlB;MAA8B,aAAa,EAAEC,aAA7C;MAA4D,UAAU,EAAEL,UAAxE;MAAoF,SAAS,EAAEE,SAA/F;MAA0G,OAAO,EAAEJ,OAAnH;MACM,QAAQ,EAAEJ,QADhB;MAC0B,WAAW,EAAEC,WADvC;MAEM,IAAI,EAAEW,IAFZ;MAEkB,KAAK,EAAEC,KAFzB;MAEgC,GAAG,EAAEC,GAFrC;MAE0C,QAAQ,EAAEU,QAFpD;MAGM,UAAU,EAAEtB,UAHlB;MAG8B,aAAa,EAAEC;IAH7C;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GA9CQJ,G;;KAAAA,G;AAgDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}