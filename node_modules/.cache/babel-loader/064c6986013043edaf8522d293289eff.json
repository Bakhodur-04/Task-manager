{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-projects\\\\task\\\\task-manager\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Info from './components/API/Info';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { getYear, getNowMonth, getNowDay } from './utils/date';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [modalReg, setModalReg] = useState(false);\n  const [modalLogin, setModalLogin] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [nowDayTask, setNowDayTask] = useState();\n  let year = getYear();\n  let month = getNowMonth();\n  let day = getNowDay();\n\n  async function fetchInfo() {\n    const response = await Info.getAll();\n    console.log(response);\n\n    if (response.data.userId === 1) {\n      setIsLogin(true);\n    }\n\n    setNowDayTask(response.data.date);\n    console.log(nowDayTask);\n  }\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n  let dayArray = [];\n\n  for (let index = 1; index < 32; index++) {\n    dayArray.push(index);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      nowDayTask: nowDayTask,\n      isLogin: isLogin,\n      modalReg: modalReg,\n      setModalReg: setModalReg,\n      year: year,\n      month: month,\n      day: day,\n      dayArray: dayArray,\n      modalLogin: modalLogin,\n      setModalLogin: setModalLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xB/u7gj7d+PqpV1N7zKPJmdPjII=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Info","Header","Main","getYear","getNowMonth","getNowDay","App","modalReg","setModalReg","modalLogin","setModalLogin","isLogin","setIsLogin","nowDayTask","setNowDayTask","year","month","day","fetchInfo","response","getAll","console","log","data","userId","date","dayArray","index","push"],"sources":["E:/react-projects/task/task-manager/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Info from './components/API/Info';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport {getYear, getNowMonth, getNowDay} from './utils/date';\n\nfunction App() {\n  const [modalReg, setModalReg] = useState(false);\n  const [modalLogin, setModalLogin] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [nowDayTask, setNowDayTask] = useState();\n\n  let year = getYear();\n  let month = getNowMonth();\n  let day = getNowDay();\n\n  async function fetchInfo() {\n    const response = await Info.getAll();\n    console.log(response)\n\n    if (response.data.userId === 1) {\n      setIsLogin(true)\n    }\n    setNowDayTask(response.data.date)\n    console.log(nowDayTask)\n  }\n\n  useEffect(() => {\n    fetchInfo()\n  }, [])\n\n  let dayArray = [];\n  for (let index = 1; index < 32; index++) {\n      dayArray.push(index)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Main nowDayTask={nowDayTask} isLogin={isLogin} modalReg={modalReg} setModalReg={setModalReg} \n            year={year} month={month} day={day} dayArray={dayArray} \n            modalLogin={modalLogin} setModalLogin={setModalLogin}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA8C,cAA9C;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,EAA5C;EAEA,IAAIgB,IAAI,GAAGZ,OAAO,EAAlB;EACA,IAAIa,KAAK,GAAGZ,WAAW,EAAvB;EACA,IAAIa,GAAG,GAAGZ,SAAS,EAAnB;;EAEA,eAAea,SAAf,GAA2B;IACzB,MAAMC,QAAQ,GAAG,MAAMnB,IAAI,CAACoB,MAAL,EAAvB;IACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;;IAEA,IAAIA,QAAQ,CAACI,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;MAC9BZ,UAAU,CAAC,IAAD,CAAV;IACD;;IACDE,aAAa,CAACK,QAAQ,CAACI,IAAT,CAAcE,IAAf,CAAb;IACAJ,OAAO,CAACC,GAAR,CAAYT,UAAZ;EACD;;EAEDf,SAAS,CAAC,MAAM;IACdoB,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT;EAIA,IAAIQ,QAAQ,GAAG,EAAf;;EACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;IACrCD,QAAQ,CAACE,IAAT,CAAcD,KAAd;EACH;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,IAAD;MAAM,UAAU,EAAEd,UAAlB;MAA8B,OAAO,EAAEF,OAAvC;MAAgD,QAAQ,EAAEJ,QAA1D;MAAoE,WAAW,EAAEC,WAAjF;MACM,IAAI,EAAEO,IADZ;MACkB,KAAK,EAAEC,KADzB;MACgC,GAAG,EAAEC,GADrC;MAC0C,QAAQ,EAAES,QADpD;MAEM,UAAU,EAAEjB,UAFlB;MAE8B,aAAa,EAAEC;IAF7C;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAxCQJ,G;;KAAAA,G;AA0CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}